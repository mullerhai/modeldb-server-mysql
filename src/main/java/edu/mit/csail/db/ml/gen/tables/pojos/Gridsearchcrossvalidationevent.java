/**
 * This class is generated by jOOQ
 */
package edu.mit.csail.db.ml.gen.tables.pojos;


import javax.annotation.Generated;
import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Gridsearchcrossvalidationevent implements Serializable {

    private static final long serialVersionUID = -1216379148;

    private Integer id;
    private Integer numfolds;
    private Integer best;
    private Integer experimentrun;

    public Gridsearchcrossvalidationevent() {}

    public Gridsearchcrossvalidationevent(Gridsearchcrossvalidationevent value) {
        this.id = value.id;
        this.numfolds = value.numfolds;
        this.best = value.best;
        this.experimentrun = value.experimentrun;
    }

    public Gridsearchcrossvalidationevent(
        Integer id,
        Integer numfolds,
        Integer best,
        Integer experimentrun
    ) {
        this.id = id;
        this.numfolds = numfolds;
        this.best = best;
        this.experimentrun = experimentrun;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getNumfolds() {
        return this.numfolds;
    }

    public void setNumfolds(Integer numfolds) {
        this.numfolds = numfolds;
    }

    public Integer getBest() {
        return this.best;
    }

    public void setBest(Integer best) {
        this.best = best;
    }

    public Integer getExperimentrun() {
        return this.experimentrun;
    }

    public void setExperimentrun(Integer experimentrun) {
        this.experimentrun = experimentrun;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Gridsearchcrossvalidationevent (");

        sb.append(id);
        sb.append(", ").append(numfolds);
        sb.append(", ").append(best);
        sb.append(", ").append(experimentrun);

        sb.append(")");
        return sb.toString();
    }
}
