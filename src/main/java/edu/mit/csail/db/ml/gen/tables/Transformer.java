/**
 * This class is generated by jOOQ
 */
package edu.mit.csail.db.ml.gen.tables;


import edu.mit.csail.db.ml.gen.Keys;
import edu.mit.csail.db.ml.gen.Modeldb;
import edu.mit.csail.db.ml.gen.tables.records.TransformerRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transformer extends TableImpl<TransformerRecord> {

    private static final long serialVersionUID = -1586797040;

    /**
     * The reference instance of <code>modeldb.Transformer</code>
     */
    public static final Transformer TRANSFORMER = new Transformer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TransformerRecord> getRecordType() {
        return TransformerRecord.class;
    }

    /**
     * The column <code>modeldb.Transformer.id</code>.
     */
    public final TableField<TransformerRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>modeldb.Transformer.transformerType</code>.
     */
    public final TableField<TransformerRecord, String> TRANSFORMERTYPE = createField("transformerType", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>modeldb.Transformer.tag</code>.
     */
    public final TableField<TransformerRecord, String> TAG = createField("tag", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>modeldb.Transformer.experimentRun</code>.
     */
    public final TableField<TransformerRecord, Integer> EXPERIMENTRUN = createField("experimentRun", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>modeldb.Transformer.filepath</code>.
     */
    public final TableField<TransformerRecord, String> FILEPATH = createField("filepath", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>modeldb.Transformer</code> table reference
     */
    public Transformer() {
        this("Transformer", null);
    }

    /**
     * Create an aliased <code>modeldb.Transformer</code> table reference
     */
    public Transformer(String alias) {
        this(alias, TRANSFORMER);
    }

    private Transformer(String alias, Table<TransformerRecord> aliased) {
        this(alias, aliased, null);
    }

    private Transformer(String alias, Table<TransformerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Modeldb.MODELDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TransformerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TRANSFORMER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TransformerRecord> getPrimaryKey() {
        return Keys.KEY_TRANSFORMER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TransformerRecord>> getKeys() {
        return Arrays.<UniqueKey<TransformerRecord>>asList(Keys.KEY_TRANSFORMER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TransformerRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TransformerRecord, ?>>asList(Keys.TRANSFORMER_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Transformer as(String alias) {
        return new Transformer(alias, this);
    }

    /**
     * Rename this table
     */
    public Transformer rename(String name) {
        return new Transformer(name, null);
    }
}
