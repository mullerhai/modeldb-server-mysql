/**
 * This class is generated by jOOQ
 */
package edu.mit.csail.db.ml.gen.tables;


import edu.mit.csail.db.ml.gen.Keys;
import edu.mit.csail.db.ml.gen.Modeldb;
import edu.mit.csail.db.ml.gen.tables.records.MetadatakvRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Metadatakv extends TableImpl<MetadatakvRecord> {

    private static final long serialVersionUID = 1569531046;

    /**
     * The reference instance of <code>modeldb.MetadataKV</code>
     */
    public static final Metadatakv METADATAKV = new Metadatakv();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MetadatakvRecord> getRecordType() {
        return MetadatakvRecord.class;
    }

    /**
     * The column <code>modeldb.MetadataKV.id</code>.
     */
    public final TableField<MetadatakvRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>modeldb.MetadataKV.key</code>.
     */
    public final TableField<MetadatakvRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>modeldb.MetadataKV.value</code>.
     */
    public final TableField<MetadatakvRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>modeldb.MetadataKV.valueType</code>.
     */
    public final TableField<MetadatakvRecord, String> VALUETYPE = createField("valueType", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>modeldb.MetadataKV</code> table reference
     */
    public Metadatakv() {
        this("MetadataKV", null);
    }

    /**
     * Create an aliased <code>modeldb.MetadataKV</code> table reference
     */
    public Metadatakv(String alias) {
        this(alias, METADATAKV);
    }

    private Metadatakv(String alias, Table<MetadatakvRecord> aliased) {
        this(alias, aliased, null);
    }

    private Metadatakv(String alias, Table<MetadatakvRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Modeldb.MODELDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MetadatakvRecord, Integer> getIdentity() {
        return Keys.IDENTITY_METADATAKV;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MetadatakvRecord> getPrimaryKey() {
        return Keys.KEY_METADATAKV_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MetadatakvRecord>> getKeys() {
        return Arrays.<UniqueKey<MetadatakvRecord>>asList(Keys.KEY_METADATAKV_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Metadatakv as(String alias) {
        return new Metadatakv(alias, this);
    }

    /**
     * Rename this table
     */
    public Metadatakv rename(String name) {
        return new Metadatakv(name, null);
    }
}
