/**
 * This class is generated by jOOQ
 */
package edu.mit.csail.db.ml.gen.tables.daos;


import edu.mit.csail.db.ml.gen.tables.pojos.Dataframesplit;
import edu.mit.csail.db.ml.gen.tables.records.DataframesplitRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import javax.annotation.Generated;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataframesplitDao extends DAOImpl<DataframesplitRecord, Dataframesplit, Integer> {

    /**
     * Create a new DataframesplitDao without any configuration
     */
    public DataframesplitDao() {
        super(edu.mit.csail.db.ml.gen.tables.Dataframesplit.DATAFRAMESPLIT, Dataframesplit.class);
    }

    /**
     * Create a new DataframesplitDao with an attached configuration
     */
    public DataframesplitDao(Configuration configuration) {
        super(edu.mit.csail.db.ml.gen.tables.Dataframesplit.DATAFRAMESPLIT, Dataframesplit.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(Dataframesplit object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<Dataframesplit> fetchById(Integer... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Dataframesplit.DATAFRAMESPLIT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Dataframesplit fetchOneById(Integer value) {
        return fetchOne(edu.mit.csail.db.ml.gen.tables.Dataframesplit.DATAFRAMESPLIT.ID, value);
    }

    /**
     * Fetch records that have <code>splitEventId IN (values)</code>
     */
    public List<Dataframesplit> fetchBySpliteventid(Integer... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Dataframesplit.DATAFRAMESPLIT.SPLITEVENTID, values);
    }

    /**
     * Fetch records that have <code>weight IN (values)</code>
     */
    public List<Dataframesplit> fetchByWeight(Double... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Dataframesplit.DATAFRAMESPLIT.WEIGHT, values);
    }

    /**
     * Fetch records that have <code>dataFrameId IN (values)</code>
     */
    public List<Dataframesplit> fetchByDataframeid(Integer... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Dataframesplit.DATAFRAMESPLIT.DATAFRAMEID, values);
    }

    /**
     * Fetch records that have <code>experimentRun IN (values)</code>
     */
    public List<Dataframesplit> fetchByExperimentrun(Integer... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Dataframesplit.DATAFRAMESPLIT.EXPERIMENTRUN, values);
    }
}
