/**
 * This class is generated by jOOQ
 */
package edu.mit.csail.db.ml.gen.tables;


import edu.mit.csail.db.ml.gen.Modeldb;
import edu.mit.csail.db.ml.gen.tables.records.TransformerViewRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransformerView extends TableImpl<TransformerViewRecord> {

    private static final long serialVersionUID = 1726861669;

    /**
     * The reference instance of <code>modeldb.transformer_view</code>
     */
    public static final TransformerView TRANSFORMER_VIEW = new TransformerView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TransformerViewRecord> getRecordType() {
        return TransformerViewRecord.class;
    }

    /**
     * The column <code>modeldb.transformer_view.te_id</code>.
     */
    public final TableField<TransformerViewRecord, Integer> TE_ID = createField("te_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>modeldb.transformer_view.transformer_type</code>.
     */
    public final TableField<TransformerViewRecord, String> TRANSFORMER_TYPE = createField("transformer_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>modeldb.transformer_view.transformer</code>.
     */
    public final TableField<TransformerViewRecord, Integer> TRANSFORMER = createField("transformer", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>modeldb.transformer_view.input_df</code>.
     */
    public final TableField<TransformerViewRecord, Integer> INPUT_DF = createField("input_df", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>modeldb.transformer_view.output_df</code>.
     */
    public final TableField<TransformerViewRecord, Integer> OUTPUT_DF = createField("output_df", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>modeldb.transformer_view</code> table reference
     */
    public TransformerView() {
        this("transformer_view", null);
    }

    /**
     * Create an aliased <code>modeldb.transformer_view</code> table reference
     */
    public TransformerView(String alias) {
        this(alias, TRANSFORMER_VIEW);
    }

    private TransformerView(String alias, Table<TransformerViewRecord> aliased) {
        this(alias, aliased, null);
    }

    private TransformerView(String alias, Table<TransformerViewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Modeldb.MODELDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransformerView as(String alias) {
        return new TransformerView(alias, this);
    }

    /**
     * Rename this table
     */
    public TransformerView rename(String name) {
        return new TransformerView(name, null);
    }
}
