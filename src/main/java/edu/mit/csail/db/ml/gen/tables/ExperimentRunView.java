/**
 * This class is generated by jOOQ
 */
package edu.mit.csail.db.ml.gen.tables;


import edu.mit.csail.db.ml.gen.Modeldb;
import edu.mit.csail.db.ml.gen.tables.records.ExperimentRunViewRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;


/**
 * VIEW
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExperimentRunView extends TableImpl<ExperimentRunViewRecord> {

    private static final long serialVersionUID = -1586529854;

    /**
     * The reference instance of <code>modeldb.experiment_run_view</code>
     */
    public static final ExperimentRunView EXPERIMENT_RUN_VIEW = new ExperimentRunView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ExperimentRunViewRecord> getRecordType() {
        return ExperimentRunViewRecord.class;
    }

    /**
     * The column <code>modeldb.experiment_run_view.experimentRunId</code>.
     */
    public final TableField<ExperimentRunViewRecord, Integer> EXPERIMENTRUNID = createField("experimentRunId", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>modeldb.experiment_run_view.experimentId</code>.
     */
    public final TableField<ExperimentRunViewRecord, Integer> EXPERIMENTID = createField("experimentId", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>modeldb.experiment_run_view.projectId</code>.
     */
    public final TableField<ExperimentRunViewRecord, Integer> PROJECTID = createField("projectId", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>modeldb.experiment_run_view</code> table reference
     */
    public ExperimentRunView() {
        this("experiment_run_view", null);
    }

    /**
     * Create an aliased <code>modeldb.experiment_run_view</code> table reference
     */
    public ExperimentRunView(String alias) {
        this(alias, EXPERIMENT_RUN_VIEW);
    }

    private ExperimentRunView(String alias, Table<ExperimentRunViewRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExperimentRunView(String alias, Table<ExperimentRunViewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "VIEW");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Modeldb.MODELDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ExperimentRunView as(String alias) {
        return new ExperimentRunView(alias, this);
    }

    /**
     * Rename this table
     */
    public ExperimentRunView rename(String name) {
        return new ExperimentRunView(name, null);
    }
}
