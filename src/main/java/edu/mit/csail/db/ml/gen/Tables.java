/**
 * This class is generated by jOOQ
 */
package edu.mit.csail.db.ml.gen;


import edu.mit.csail.db.ml.gen.tables.*;

import javax.annotation.Generated;


/**
 * Convenience access to all tables in modeldb
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * The table <code>modeldb.Annotation</code>.
     */
    public static final Annotation ANNOTATION = Annotation.ANNOTATION;

    /**
     * The table <code>modeldb.AnnotationFragment</code>.
     */
    public static final Annotationfragment ANNOTATIONFRAGMENT = Annotationfragment.ANNOTATIONFRAGMENT;

    /**
     * The table <code>modeldb.CrossValidationEvent</code>.
     */
    public static final Crossvalidationevent CROSSVALIDATIONEVENT = Crossvalidationevent.CROSSVALIDATIONEVENT;

    /**
     * The table <code>modeldb.CrossValidationFold</code>.
     */
    public static final Crossvalidationfold CROSSVALIDATIONFOLD = Crossvalidationfold.CROSSVALIDATIONFOLD;

    /**
     * The table <code>modeldb.DataFrame</code>.
     */
    public static final Dataframe DATAFRAME = Dataframe.DATAFRAME;

    /**
     * The table <code>modeldb.DataFrameColumn</code>.
     */
    public static final Dataframecolumn DATAFRAMECOLUMN = Dataframecolumn.DATAFRAMECOLUMN;

    /**
     * The table <code>modeldb.DataFrameMetadata</code>.
     */
    public static final Dataframemetadata DATAFRAMEMETADATA = Dataframemetadata.DATAFRAMEMETADATA;

    /**
     * The table <code>modeldb.DataFrameSplit</code>.
     */
    public static final Dataframesplit DATAFRAMESPLIT = Dataframesplit.DATAFRAMESPLIT;

    /**
     * The table <code>modeldb.Event</code>.
     */
    public static final Event EVENT = Event.EVENT;

    /**
     * The table <code>modeldb.Experiment</code>.
     */
    public static final Experiment EXPERIMENT = Experiment.EXPERIMENT;

    /**
     * The table <code>modeldb.ExperimentRun</code>.
     */
    public static final Experimentrun EXPERIMENTRUN = Experimentrun.EXPERIMENTRUN;

    /**
     * VIEW
     */
    public static final ExperimentRunView EXPERIMENT_RUN_VIEW = ExperimentRunView.EXPERIMENT_RUN_VIEW;

    /**
     * The table <code>modeldb.Feature</code>.
     */
    public static final Feature FEATURE = Feature.FEATURE;

    /**
     * The table <code>modeldb.FitEvent</code>.
     */
    public static final Fitevent FITEVENT = Fitevent.FITEVENT;

    /**
     * The table <code>modeldb.GridCellCrossValidation</code>.
     */
    public static final Gridcellcrossvalidation GRIDCELLCROSSVALIDATION = Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION;

    /**
     * The table <code>modeldb.GridSearchCrossValidationEvent</code>.
     */
    public static final Gridsearchcrossvalidationevent GRIDSEARCHCROSSVALIDATIONEVENT = Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT;

    /**
     * The table <code>modeldb.HyperParameter</code>.
     */
    public static final Hyperparameter HYPERPARAMETER = Hyperparameter.HYPERPARAMETER;

    /**
     * The table <code>modeldb.LinearModel</code>.
     */
    public static final Linearmodel LINEARMODEL = Linearmodel.LINEARMODEL;

    /**
     * The table <code>modeldb.LinearModelTerm</code>.
     */
    public static final Linearmodelterm LINEARMODELTERM = Linearmodelterm.LINEARMODELTERM;

    /**
     * The table <code>modeldb.MetadataKV</code>.
     */
    public static final Metadatakv METADATAKV = Metadatakv.METADATAKV;

    /**
     * The table <code>modeldb.MetricEvent</code>.
     */
    public static final Metricevent METRICEVENT = Metricevent.METRICEVENT;

    /**
     * The table <code>modeldb.ModelObjectiveHistory</code>.
     */
    public static final Modelobjectivehistory MODELOBJECTIVEHISTORY = Modelobjectivehistory.MODELOBJECTIVEHISTORY;

    /**
     * VIEW
     */
    public static final ModelView MODEL_VIEW = ModelView.MODEL_VIEW;

    /**
     * The table <code>modeldb.PipelineStage</code>.
     */
    public static final Pipelinestage PIPELINESTAGE = Pipelinestage.PIPELINESTAGE;

    /**
     * VIEW
     */
    public static final PipelineView PIPELINE_VIEW = PipelineView.PIPELINE_VIEW;

    /**
     * The table <code>modeldb.Project</code>.
     */
    public static final Project PROJECT = Project.PROJECT;

    /**
     * The table <code>modeldb.RandomSplitEvent</code>.
     */
    public static final Randomsplitevent RANDOMSPLITEVENT = Randomsplitevent.RANDOMSPLITEVENT;

    /**
     * The table <code>modeldb.Transformer</code>.
     */
    public static final Transformer TRANSFORMER = Transformer.TRANSFORMER;

    /**
     * The table <code>modeldb.TransformerSpec</code>.
     */
    public static final Transformerspec TRANSFORMERSPEC = Transformerspec.TRANSFORMERSPEC;

    /**
     * VIEW
     */
    public static final TransformerView TRANSFORMER_VIEW = TransformerView.TRANSFORMER_VIEW;

    /**
     * The table <code>modeldb.TransformEvent</code>.
     */
    public static final Transformevent TRANSFORMEVENT = Transformevent.TRANSFORMEVENT;

    /**
     * The table <code>modeldb.TreeLink</code>.
     */
    public static final Treelink TREELINK = Treelink.TREELINK;

    /**
     * The table <code>modeldb.TreeModel</code>.
     */
    public static final Treemodel TREEMODEL = Treemodel.TREEMODEL;

    /**
     * The table <code>modeldb.TreeModelComponent</code>.
     */
    public static final Treemodelcomponent TREEMODELCOMPONENT = Treemodelcomponent.TREEMODELCOMPONENT;

    /**
     * The table <code>modeldb.TreeNode</code>.
     */
    public static final Treenode TREENODE = Treenode.TREENODE;
}
