/**
 * This class is generated by jOOQ
 */
package edu.mit.csail.db.ml.gen.tables.daos;


import edu.mit.csail.db.ml.gen.tables.pojos.Treelink;
import edu.mit.csail.db.ml.gen.tables.records.TreelinkRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import javax.annotation.Generated;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TreelinkDao extends DAOImpl<TreelinkRecord, Treelink, Integer> {

    /**
     * Create a new TreelinkDao without any configuration
     */
    public TreelinkDao() {
        super(edu.mit.csail.db.ml.gen.tables.Treelink.TREELINK, Treelink.class);
    }

    /**
     * Create a new TreelinkDao with an attached configuration
     */
    public TreelinkDao(Configuration configuration) {
        super(edu.mit.csail.db.ml.gen.tables.Treelink.TREELINK, Treelink.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(Treelink object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<Treelink> fetchById(Integer... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Treelink.TREELINK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Treelink fetchOneById(Integer value) {
        return fetchOne(edu.mit.csail.db.ml.gen.tables.Treelink.TREELINK.ID, value);
    }

    /**
     * Fetch records that have <code>parent IN (values)</code>
     */
    public List<Treelink> fetchByParent(Integer... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Treelink.TREELINK.PARENT, values);
    }

    /**
     * Fetch records that have <code>child IN (values)</code>
     */
    public List<Treelink> fetchByChild(Integer... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Treelink.TREELINK.CHILD, values);
    }

    /**
     * Fetch records that have <code>isLeft IN (values)</code>
     */
    public List<Treelink> fetchByIsleft(Integer... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Treelink.TREELINK.ISLEFT, values);
    }
}
