/**
 * This class is generated by jOOQ
 */
package edu.mit.csail.db.ml.gen.tables.daos;


import edu.mit.csail.db.ml.gen.tables.pojos.Metricevent;
import edu.mit.csail.db.ml.gen.tables.records.MetriceventRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import javax.annotation.Generated;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MetriceventDao extends DAOImpl<MetriceventRecord, Metricevent, Integer> {

    /**
     * Create a new MetriceventDao without any configuration
     */
    public MetriceventDao() {
        super(edu.mit.csail.db.ml.gen.tables.Metricevent.METRICEVENT, Metricevent.class);
    }

    /**
     * Create a new MetriceventDao with an attached configuration
     */
    public MetriceventDao(Configuration configuration) {
        super(edu.mit.csail.db.ml.gen.tables.Metricevent.METRICEVENT, Metricevent.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(Metricevent object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<Metricevent> fetchById(Integer... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Metricevent.METRICEVENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Metricevent fetchOneById(Integer value) {
        return fetchOne(edu.mit.csail.db.ml.gen.tables.Metricevent.METRICEVENT.ID, value);
    }

    /**
     * Fetch records that have <code>transformer IN (values)</code>
     */
    public List<Metricevent> fetchByTransformer(Integer... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Metricevent.METRICEVENT.TRANSFORMER, values);
    }

    /**
     * Fetch records that have <code>df IN (values)</code>
     */
    public List<Metricevent> fetchByDf(Integer... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Metricevent.METRICEVENT.DF, values);
    }

    /**
     * Fetch records that have <code>metricType IN (values)</code>
     */
    public List<Metricevent> fetchByMetrictype(String... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Metricevent.METRICEVENT.METRICTYPE, values);
    }

    /**
     * Fetch records that have <code>metricValue IN (values)</code>
     */
    public List<Metricevent> fetchByMetricvalue(Double... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Metricevent.METRICEVENT.METRICVALUE, values);
    }

    /**
     * Fetch records that have <code>experimentRun IN (values)</code>
     */
    public List<Metricevent> fetchByExperimentrun(Integer... values) {
        return fetch(edu.mit.csail.db.ml.gen.tables.Metricevent.METRICEVENT.EXPERIMENTRUN, values);
    }
}
