/**
 * This class is generated by jOOQ
 */
package edu.mit.csail.db.ml.gen.tables.daos;


import edu.mit.csail.db.ml.gen.tables.Treemodel;
import edu.mit.csail.db.ml.gen.tables.records.TreemodelRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import javax.annotation.Generated;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TreemodelDao extends DAOImpl<TreemodelRecord, edu.mit.csail.db.ml.gen.tables.pojos.Treemodel, Integer> {

    /**
     * Create a new TreemodelDao without any configuration
     */
    public TreemodelDao() {
        super(Treemodel.TREEMODEL, edu.mit.csail.db.ml.gen.tables.pojos.Treemodel.class);
    }

    /**
     * Create a new TreemodelDao with an attached configuration
     */
    public TreemodelDao(Configuration configuration) {
        super(Treemodel.TREEMODEL, edu.mit.csail.db.ml.gen.tables.pojos.Treemodel.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(edu.mit.csail.db.ml.gen.tables.pojos.Treemodel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<edu.mit.csail.db.ml.gen.tables.pojos.Treemodel> fetchById(Integer... values) {
        return fetch(Treemodel.TREEMODEL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public edu.mit.csail.db.ml.gen.tables.pojos.Treemodel fetchOneById(Integer value) {
        return fetchOne(Treemodel.TREEMODEL.ID, value);
    }

    /**
     * Fetch records that have <code>model IN (values)</code>
     */
    public List<edu.mit.csail.db.ml.gen.tables.pojos.Treemodel> fetchByModel(Integer... values) {
        return fetch(Treemodel.TREEMODEL.MODEL, values);
    }

    /**
     * Fetch records that have <code>modelType IN (values)</code>
     */
    public List<edu.mit.csail.db.ml.gen.tables.pojos.Treemodel> fetchByModeltype(String... values) {
        return fetch(Treemodel.TREEMODEL.MODELTYPE, values);
    }
}
