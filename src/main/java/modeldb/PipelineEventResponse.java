/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package modeldb;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2018-08-01")
public class PipelineEventResponse implements org.apache.thrift.TBase<PipelineEventResponse, PipelineEventResponse._Fields>, java.io.Serializable, Cloneable, Comparable<PipelineEventResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("PipelineEventResponse");

  private static final org.apache.thrift.protocol.TField PIPELINE_FIT_RESPONSE_FIELD_DESC = new org.apache.thrift.protocol.TField("pipelineFitResponse", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField TRANSFORM_STAGES_RESPONSES_FIELD_DESC = new org.apache.thrift.protocol.TField("transformStagesResponses", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField FIT_STAGES_RESPONSES_FIELD_DESC = new org.apache.thrift.protocol.TField("fitStagesResponses", org.apache.thrift.protocol.TType.LIST, (short)3);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new PipelineEventResponseStandardSchemeFactory());
    schemes.put(TupleScheme.class, new PipelineEventResponseTupleSchemeFactory());
  }

  public FitEventResponse pipelineFitResponse; // required
  public List<TransformEventResponse> transformStagesResponses; // required
  public List<FitEventResponse> fitStagesResponses; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PIPELINE_FIT_RESPONSE((short)1, "pipelineFitResponse"),
    TRANSFORM_STAGES_RESPONSES((short)2, "transformStagesResponses"),
    FIT_STAGES_RESPONSES((short)3, "fitStagesResponses");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PIPELINE_FIT_RESPONSE
          return PIPELINE_FIT_RESPONSE;
        case 2: // TRANSFORM_STAGES_RESPONSES
          return TRANSFORM_STAGES_RESPONSES;
        case 3: // FIT_STAGES_RESPONSES
          return FIT_STAGES_RESPONSES;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PIPELINE_FIT_RESPONSE, new org.apache.thrift.meta_data.FieldMetaData("pipelineFitResponse", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, FitEventResponse.class)));
    tmpMap.put(_Fields.TRANSFORM_STAGES_RESPONSES, new org.apache.thrift.meta_data.FieldMetaData("transformStagesResponses", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TransformEventResponse.class))));
    tmpMap.put(_Fields.FIT_STAGES_RESPONSES, new org.apache.thrift.meta_data.FieldMetaData("fitStagesResponses", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, FitEventResponse.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(PipelineEventResponse.class, metaDataMap);
  }

  public PipelineEventResponse() {
  }

  public PipelineEventResponse(
    FitEventResponse pipelineFitResponse,
    List<TransformEventResponse> transformStagesResponses,
    List<FitEventResponse> fitStagesResponses)
  {
    this();
    this.pipelineFitResponse = pipelineFitResponse;
    this.transformStagesResponses = transformStagesResponses;
    this.fitStagesResponses = fitStagesResponses;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public PipelineEventResponse(PipelineEventResponse other) {
    if (other.isSetPipelineFitResponse()) {
      this.pipelineFitResponse = new FitEventResponse(other.pipelineFitResponse);
    }
    if (other.isSetTransformStagesResponses()) {
      List<TransformEventResponse> __this__transformStagesResponses = new ArrayList<TransformEventResponse>(other.transformStagesResponses.size());
      for (TransformEventResponse other_element : other.transformStagesResponses) {
        __this__transformStagesResponses.add(new TransformEventResponse(other_element));
      }
      this.transformStagesResponses = __this__transformStagesResponses;
    }
    if (other.isSetFitStagesResponses()) {
      List<FitEventResponse> __this__fitStagesResponses = new ArrayList<FitEventResponse>(other.fitStagesResponses.size());
      for (FitEventResponse other_element : other.fitStagesResponses) {
        __this__fitStagesResponses.add(new FitEventResponse(other_element));
      }
      this.fitStagesResponses = __this__fitStagesResponses;
    }
  }

  public PipelineEventResponse deepCopy() {
    return new PipelineEventResponse(this);
  }

  @Override
  public void clear() {
    this.pipelineFitResponse = null;
    this.transformStagesResponses = null;
    this.fitStagesResponses = null;
  }

  public FitEventResponse getPipelineFitResponse() {
    return this.pipelineFitResponse;
  }

  public PipelineEventResponse setPipelineFitResponse(FitEventResponse pipelineFitResponse) {
    this.pipelineFitResponse = pipelineFitResponse;
    return this;
  }

  public void unsetPipelineFitResponse() {
    this.pipelineFitResponse = null;
  }

  /** Returns true if field pipelineFitResponse is set (has been assigned a value) and false otherwise */
  public boolean isSetPipelineFitResponse() {
    return this.pipelineFitResponse != null;
  }

  public void setPipelineFitResponseIsSet(boolean value) {
    if (!value) {
      this.pipelineFitResponse = null;
    }
  }

  public int getTransformStagesResponsesSize() {
    return (this.transformStagesResponses == null) ? 0 : this.transformStagesResponses.size();
  }

  public java.util.Iterator<TransformEventResponse> getTransformStagesResponsesIterator() {
    return (this.transformStagesResponses == null) ? null : this.transformStagesResponses.iterator();
  }

  public void addToTransformStagesResponses(TransformEventResponse elem) {
    if (this.transformStagesResponses == null) {
      this.transformStagesResponses = new ArrayList<TransformEventResponse>();
    }
    this.transformStagesResponses.add(elem);
  }

  public List<TransformEventResponse> getTransformStagesResponses() {
    return this.transformStagesResponses;
  }

  public PipelineEventResponse setTransformStagesResponses(List<TransformEventResponse> transformStagesResponses) {
    this.transformStagesResponses = transformStagesResponses;
    return this;
  }

  public void unsetTransformStagesResponses() {
    this.transformStagesResponses = null;
  }

  /** Returns true if field transformStagesResponses is set (has been assigned a value) and false otherwise */
  public boolean isSetTransformStagesResponses() {
    return this.transformStagesResponses != null;
  }

  public void setTransformStagesResponsesIsSet(boolean value) {
    if (!value) {
      this.transformStagesResponses = null;
    }
  }

  public int getFitStagesResponsesSize() {
    return (this.fitStagesResponses == null) ? 0 : this.fitStagesResponses.size();
  }

  public java.util.Iterator<FitEventResponse> getFitStagesResponsesIterator() {
    return (this.fitStagesResponses == null) ? null : this.fitStagesResponses.iterator();
  }

  public void addToFitStagesResponses(FitEventResponse elem) {
    if (this.fitStagesResponses == null) {
      this.fitStagesResponses = new ArrayList<FitEventResponse>();
    }
    this.fitStagesResponses.add(elem);
  }

  public List<FitEventResponse> getFitStagesResponses() {
    return this.fitStagesResponses;
  }

  public PipelineEventResponse setFitStagesResponses(List<FitEventResponse> fitStagesResponses) {
    this.fitStagesResponses = fitStagesResponses;
    return this;
  }

  public void unsetFitStagesResponses() {
    this.fitStagesResponses = null;
  }

  /** Returns true if field fitStagesResponses is set (has been assigned a value) and false otherwise */
  public boolean isSetFitStagesResponses() {
    return this.fitStagesResponses != null;
  }

  public void setFitStagesResponsesIsSet(boolean value) {
    if (!value) {
      this.fitStagesResponses = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PIPELINE_FIT_RESPONSE:
      if (value == null) {
        unsetPipelineFitResponse();
      } else {
        setPipelineFitResponse((FitEventResponse)value);
      }
      break;

    case TRANSFORM_STAGES_RESPONSES:
      if (value == null) {
        unsetTransformStagesResponses();
      } else {
        setTransformStagesResponses((List<TransformEventResponse>)value);
      }
      break;

    case FIT_STAGES_RESPONSES:
      if (value == null) {
        unsetFitStagesResponses();
      } else {
        setFitStagesResponses((List<FitEventResponse>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PIPELINE_FIT_RESPONSE:
      return getPipelineFitResponse();

    case TRANSFORM_STAGES_RESPONSES:
      return getTransformStagesResponses();

    case FIT_STAGES_RESPONSES:
      return getFitStagesResponses();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PIPELINE_FIT_RESPONSE:
      return isSetPipelineFitResponse();
    case TRANSFORM_STAGES_RESPONSES:
      return isSetTransformStagesResponses();
    case FIT_STAGES_RESPONSES:
      return isSetFitStagesResponses();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof PipelineEventResponse)
      return this.equals((PipelineEventResponse)that);
    return false;
  }

  public boolean equals(PipelineEventResponse that) {
    if (that == null)
      return false;

    boolean this_present_pipelineFitResponse = true && this.isSetPipelineFitResponse();
    boolean that_present_pipelineFitResponse = true && that.isSetPipelineFitResponse();
    if (this_present_pipelineFitResponse || that_present_pipelineFitResponse) {
      if (!(this_present_pipelineFitResponse && that_present_pipelineFitResponse))
        return false;
      if (!this.pipelineFitResponse.equals(that.pipelineFitResponse))
        return false;
    }

    boolean this_present_transformStagesResponses = true && this.isSetTransformStagesResponses();
    boolean that_present_transformStagesResponses = true && that.isSetTransformStagesResponses();
    if (this_present_transformStagesResponses || that_present_transformStagesResponses) {
      if (!(this_present_transformStagesResponses && that_present_transformStagesResponses))
        return false;
      if (!this.transformStagesResponses.equals(that.transformStagesResponses))
        return false;
    }

    boolean this_present_fitStagesResponses = true && this.isSetFitStagesResponses();
    boolean that_present_fitStagesResponses = true && that.isSetFitStagesResponses();
    if (this_present_fitStagesResponses || that_present_fitStagesResponses) {
      if (!(this_present_fitStagesResponses && that_present_fitStagesResponses))
        return false;
      if (!this.fitStagesResponses.equals(that.fitStagesResponses))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_pipelineFitResponse = true && (isSetPipelineFitResponse());
    list.add(present_pipelineFitResponse);
    if (present_pipelineFitResponse)
      list.add(pipelineFitResponse);

    boolean present_transformStagesResponses = true && (isSetTransformStagesResponses());
    list.add(present_transformStagesResponses);
    if (present_transformStagesResponses)
      list.add(transformStagesResponses);

    boolean present_fitStagesResponses = true && (isSetFitStagesResponses());
    list.add(present_fitStagesResponses);
    if (present_fitStagesResponses)
      list.add(fitStagesResponses);

    return list.hashCode();
  }

  @Override
  public int compareTo(PipelineEventResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPipelineFitResponse()).compareTo(other.isSetPipelineFitResponse());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPipelineFitResponse()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pipelineFitResponse, other.pipelineFitResponse);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTransformStagesResponses()).compareTo(other.isSetTransformStagesResponses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTransformStagesResponses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.transformStagesResponses, other.transformStagesResponses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFitStagesResponses()).compareTo(other.isSetFitStagesResponses());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFitStagesResponses()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fitStagesResponses, other.fitStagesResponses);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("PipelineEventResponse(");
    boolean first = true;

    sb.append("pipelineFitResponse:");
    if (this.pipelineFitResponse == null) {
      sb.append("null");
    } else {
      sb.append(this.pipelineFitResponse);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("transformStagesResponses:");
    if (this.transformStagesResponses == null) {
      sb.append("null");
    } else {
      sb.append(this.transformStagesResponses);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fitStagesResponses:");
    if (this.fitStagesResponses == null) {
      sb.append("null");
    } else {
      sb.append(this.fitStagesResponses);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (pipelineFitResponse != null) {
      pipelineFitResponse.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class PipelineEventResponseStandardSchemeFactory implements SchemeFactory {
    public PipelineEventResponseStandardScheme getScheme() {
      return new PipelineEventResponseStandardScheme();
    }
  }

  private static class PipelineEventResponseStandardScheme extends StandardScheme<PipelineEventResponse> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, PipelineEventResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PIPELINE_FIT_RESPONSE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.pipelineFitResponse = new FitEventResponse();
              struct.pipelineFitResponse.read(iprot);
              struct.setPipelineFitResponseIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TRANSFORM_STAGES_RESPONSES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list120 = iprot.readListBegin();
                struct.transformStagesResponses = new ArrayList<TransformEventResponse>(_list120.size);
                TransformEventResponse _elem121;
                for (int _i122 = 0; _i122 < _list120.size; ++_i122)
                {
                  _elem121 = new TransformEventResponse();
                  _elem121.read(iprot);
                  struct.transformStagesResponses.add(_elem121);
                }
                iprot.readListEnd();
              }
              struct.setTransformStagesResponsesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // FIT_STAGES_RESPONSES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list123 = iprot.readListBegin();
                struct.fitStagesResponses = new ArrayList<FitEventResponse>(_list123.size);
                FitEventResponse _elem124;
                for (int _i125 = 0; _i125 < _list123.size; ++_i125)
                {
                  _elem124 = new FitEventResponse();
                  _elem124.read(iprot);
                  struct.fitStagesResponses.add(_elem124);
                }
                iprot.readListEnd();
              }
              struct.setFitStagesResponsesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, PipelineEventResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.pipelineFitResponse != null) {
        oprot.writeFieldBegin(PIPELINE_FIT_RESPONSE_FIELD_DESC);
        struct.pipelineFitResponse.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.transformStagesResponses != null) {
        oprot.writeFieldBegin(TRANSFORM_STAGES_RESPONSES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.transformStagesResponses.size()));
          for (TransformEventResponse _iter126 : struct.transformStagesResponses)
          {
            _iter126.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.fitStagesResponses != null) {
        oprot.writeFieldBegin(FIT_STAGES_RESPONSES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.fitStagesResponses.size()));
          for (FitEventResponse _iter127 : struct.fitStagesResponses)
          {
            _iter127.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class PipelineEventResponseTupleSchemeFactory implements SchemeFactory {
    public PipelineEventResponseTupleScheme getScheme() {
      return new PipelineEventResponseTupleScheme();
    }
  }

  private static class PipelineEventResponseTupleScheme extends TupleScheme<PipelineEventResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, PipelineEventResponse struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetPipelineFitResponse()) {
        optionals.set(0);
      }
      if (struct.isSetTransformStagesResponses()) {
        optionals.set(1);
      }
      if (struct.isSetFitStagesResponses()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetPipelineFitResponse()) {
        struct.pipelineFitResponse.write(oprot);
      }
      if (struct.isSetTransformStagesResponses()) {
        {
          oprot.writeI32(struct.transformStagesResponses.size());
          for (TransformEventResponse _iter128 : struct.transformStagesResponses)
          {
            _iter128.write(oprot);
          }
        }
      }
      if (struct.isSetFitStagesResponses()) {
        {
          oprot.writeI32(struct.fitStagesResponses.size());
          for (FitEventResponse _iter129 : struct.fitStagesResponses)
          {
            _iter129.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, PipelineEventResponse struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.pipelineFitResponse = new FitEventResponse();
        struct.pipelineFitResponse.read(iprot);
        struct.setPipelineFitResponseIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list130 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.transformStagesResponses = new ArrayList<TransformEventResponse>(_list130.size);
          TransformEventResponse _elem131;
          for (int _i132 = 0; _i132 < _list130.size; ++_i132)
          {
            _elem131 = new TransformEventResponse();
            _elem131.read(iprot);
            struct.transformStagesResponses.add(_elem131);
          }
        }
        struct.setTransformStagesResponsesIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list133 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.fitStagesResponses = new ArrayList<FitEventResponse>(_list133.size);
          FitEventResponse _elem134;
          for (int _i135 = 0; _i135 < _list133.size; ++_i135)
          {
            _elem134 = new FitEventResponse();
            _elem134.read(iprot);
            struct.fitStagesResponses.add(_elem134);
          }
        }
        struct.setFitStagesResponsesIsSet(true);
      }
    }
  }

}

