/**
 * This class is generated by jOOQ
 */
package jooq.mysql.gen.tables.pojos


import java.io.Serializable
import java.lang.Integer
import java.lang.String
import java.lang.StringBuilder

import javax.annotation.Generated

import scala.Array


/**
 * VIEW
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.8.4"
  ),
  comments = "This class is generated by jOOQ"
)
class TransformerView(
    private var teId : Integer
  , private var transformerType : String 
  , private var transformer : Integer
  , private var inputDf : Integer
  , private var outputDf : Integer
) extends Serializable {

  def this() = {
    this(null, null, null, null, null)
  }

  def this (value : TransformerView) = {
    this(
        value.teId
      , value.transformerType
      , value.transformer
      , value.inputDf
      , value.outputDf
    )
  }

  def getTeId : Integer = {
    this.teId
  }

  def setTeId(teId : Integer) : Unit = {
    this.teId = teId
  }

  def getTransformerType : String = {
    this.transformerType
  }

  def setTransformerType(transformerType : String) : Unit = {
    this.transformerType = transformerType
  }

  def getTransformer : Integer = {
    this.transformer
  }

  def setTransformer(transformer : Integer) : Unit = {
    this.transformer = transformer
  }

  def getInputDf : Integer = {
    this.inputDf
  }

  def setInputDf(inputDf : Integer) : Unit = {
    this.inputDf = inputDf
  }

  def getOutputDf : Integer = {
    this.outputDf
  }

  def setOutputDf(outputDf : Integer) : Unit = {
    this.outputDf = outputDf
  }

  override def toString : String = {
    val sb = new StringBuilder("TransformerView (")

    sb.append(teId)
    sb.append(", ").append(transformerType)
    sb.append(", ").append(transformer)
    sb.append(", ").append(inputDf)
    sb.append(", ").append(outputDf)

    sb.append(")");
    return sb.toString
  }
}
