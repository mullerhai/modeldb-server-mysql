/**
 * This class is generated by jOOQ
 */
package jooq.mysql.gen.tables.pojos


import java.io.Serializable
import java.lang.Double
import java.lang.Integer
import java.lang.StringBuilder

import javax.annotation.Generated

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.8.4"
  ),
  comments = "This class is generated by jOOQ"
)
class Linearmodelterm(
    private var id : Integer
  , private var model : Integer
  , private var termindex : Integer
  , private var coefficient : Double 
  , private var tstat : Double 
  , private var stderr : Double 
  , private var pvalue : Double 
) extends Serializable {

  def this() = {
    this(null, null, null, null, null, null, null)
  }

  def this (value : Linearmodelterm) = {
    this(
        value.id
      , value.model
      , value.termindex
      , value.coefficient
      , value.tstat
      , value.stderr
      , value.pvalue
    )
  }

  def getId : Integer = {
    this.id
  }

  def setId(id : Integer) : Unit = {
    this.id = id
  }

  def getModel : Integer = {
    this.model
  }

  def setModel(model : Integer) : Unit = {
    this.model = model
  }

  def getTermindex : Integer = {
    this.termindex
  }

  def setTermindex(termindex : Integer) : Unit = {
    this.termindex = termindex
  }

  def getCoefficient : Double = {
    this.coefficient
  }

  def setCoefficient(coefficient : Double) : Unit = {
    this.coefficient = coefficient
  }

  def getTstat : Double = {
    this.tstat
  }

  def setTstat(tstat : Double) : Unit = {
    this.tstat = tstat
  }

  def getStderr : Double = {
    this.stderr
  }

  def setStderr(stderr : Double) : Unit = {
    this.stderr = stderr
  }

  def getPvalue : Double = {
    this.pvalue
  }

  def setPvalue(pvalue : Double) : Unit = {
    this.pvalue = pvalue
  }

  override def toString : String = {
    val sb = new StringBuilder("Linearmodelterm (")

    sb.append(id)
    sb.append(", ").append(model)
    sb.append(", ").append(termindex)
    sb.append(", ").append(coefficient)
    sb.append(", ").append(tstat)
    sb.append(", ").append(stderr)
    sb.append(", ").append(pvalue)

    sb.append(")");
    return sb.toString
  }
}
