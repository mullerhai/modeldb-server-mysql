/**
 * This class is generated by jOOQ
 */
package jooq.mysql.gen.tables.pojos


import java.io.Serializable
import java.lang.Integer
import java.lang.String
import java.lang.StringBuilder

import javax.annotation.Generated

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.8.4"
  ),
  comments = "This class is generated by jOOQ"
)
class Dataframecolumn(
    private var id : Integer
  , private var dfid : Integer
  , private var name : String 
  , private var `type` : String 
) extends Serializable {

  def this() = {
    this(null, null, null, null)
  }

  def this (value : Dataframecolumn) = {
    this(
        value.id
      , value.dfid
      , value.name
      , value.`type`
    )
  }

  def getId : Integer = {
    this.id
  }

  def setId(id : Integer) : Unit = {
    this.id = id
  }

  def getDfid : Integer = {
    this.dfid
  }

  def setDfid(dfid : Integer) : Unit = {
    this.dfid = dfid
  }

  def getName : String = {
    this.name
  }

  def setName(name : String) : Unit = {
    this.name = name
  }

  def getType : String = {
    this.`type`
  }

  def setType(`type` : String) : Unit = {
    this.`type` = `type`
  }

  override def toString : String = {
    val sb = new StringBuilder("Dataframecolumn (")

    sb.append(id)
    sb.append(", ").append(dfid)
    sb.append(", ").append(name)
    sb.append(", ").append(`type`)

    sb.append(")");
    return sb.toString
  }
}
