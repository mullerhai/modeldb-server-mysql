/**
 * This class is generated by jOOQ
 */
package jooq.mysql.gen.tables.pojos


import java.io.Serializable
import java.lang.Integer
import java.lang.String
import java.lang.StringBuilder

import javax.annotation.Generated

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.8.4"
  ),
  comments = "This class is generated by jOOQ"
)
class Annotationfragment(
    private var id : Integer
  , private var annotation : Integer
  , private var transformer : Integer
  , private var dataframe : Integer
  , private var spec : Integer
  , private var experimentrun : Integer
  , private var fragmentindex : Integer
  , private var `type` : String 
  , private var message : String 
) extends Serializable {

  def this() = {
    this(null, null, null, null, null, null, null, null, null)
  }

  def this (value : Annotationfragment) = {
    this(
        value.id
      , value.annotation
      , value.transformer
      , value.dataframe
      , value.spec
      , value.experimentrun
      , value.fragmentindex
      , value.`type`
      , value.message
    )
  }

  def getId : Integer = {
    this.id
  }

  def setId(id : Integer) : Unit = {
    this.id = id
  }

  def getAnnotation : Integer = {
    this.annotation
  }

  def setAnnotation(annotation : Integer) : Unit = {
    this.annotation = annotation
  }

  def getTransformer : Integer = {
    this.transformer
  }

  def setTransformer(transformer : Integer) : Unit = {
    this.transformer = transformer
  }

  def getDataframe : Integer = {
    this.dataframe
  }

  def setDataframe(dataframe : Integer) : Unit = {
    this.dataframe = dataframe
  }

  def getSpec : Integer = {
    this.spec
  }

  def setSpec(spec : Integer) : Unit = {
    this.spec = spec
  }

  def getExperimentrun : Integer = {
    this.experimentrun
  }

  def setExperimentrun(experimentrun : Integer) : Unit = {
    this.experimentrun = experimentrun
  }

  def getFragmentindex : Integer = {
    this.fragmentindex
  }

  def setFragmentindex(fragmentindex : Integer) : Unit = {
    this.fragmentindex = fragmentindex
  }

  def getType : String = {
    this.`type`
  }

  def setType(`type` : String) : Unit = {
    this.`type` = `type`
  }

  def getMessage : String = {
    this.message
  }

  def setMessage(message : String) : Unit = {
    this.message = message
  }

  override def toString : String = {
    val sb = new StringBuilder("Annotationfragment (")

    sb.append(id)
    sb.append(", ").append(annotation)
    sb.append(", ").append(transformer)
    sb.append(", ").append(dataframe)
    sb.append(", ").append(spec)
    sb.append(", ").append(experimentrun)
    sb.append(", ").append(fragmentindex)
    sb.append(", ").append(`type`)
    sb.append(", ").append(message)

    sb.append(")");
    return sb.toString
  }
}
