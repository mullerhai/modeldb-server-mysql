/**
 * This class is generated by jOOQ
 */
package jooq.mysql.gen.tables.daos


import java.lang.Integer
import java.util.List

import javax.annotation.Generated

import jooq.mysql.gen.tables.Gridcellcrossvalidation
import jooq.mysql.gen.tables.records.GridcellcrossvalidationRecord

import org.jooq.Configuration
import org.jooq.impl.DAOImpl

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.8.4"
  ),
  comments = "This class is generated by jOOQ"
)
class GridcellcrossvalidationDao(configuration : Configuration) extends DAOImpl[GridcellcrossvalidationRecord, jooq.mysql.gen.tables.pojos.Gridcellcrossvalidation, Integer](Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION, classOf[jooq.mysql.gen.tables.pojos.Gridcellcrossvalidation], configuration) {

  /**
   * Create a new GridcellcrossvalidationDao without any configuration
   */
  def this() = {
    this(null)
  }

  override protected def getId(o : jooq.mysql.gen.tables.pojos.Gridcellcrossvalidation) : Integer = {
    o.getId
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  def fetchById(values : Integer*) : List[jooq.mysql.gen.tables.pojos.Gridcellcrossvalidation] = {
    fetch(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.ID, values:_*)
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  def fetchOneById(value : Integer) : jooq.mysql.gen.tables.pojos.Gridcellcrossvalidation = {
    fetchOne(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.ID, value)
  }

  /**
   * Fetch records that have <code>gridSearch IN (values)</code>
   */
  def fetchByGridsearch(values : Integer*) : List[jooq.mysql.gen.tables.pojos.Gridcellcrossvalidation] = {
    fetch(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.GRIDSEARCH, values:_*)
  }

  /**
   * Fetch records that have <code>crossValidation IN (values)</code>
   */
  def fetchByCrossvalidation(values : Integer*) : List[jooq.mysql.gen.tables.pojos.Gridcellcrossvalidation] = {
    fetch(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.CROSSVALIDATION, values:_*)
  }

  /**
   * Fetch records that have <code>experimentRun IN (values)</code>
   */
  def fetchByExperimentrun(values : Integer*) : List[jooq.mysql.gen.tables.pojos.Gridcellcrossvalidation] = {
    fetch(Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION.EXPERIMENTRUN, values:_*)
  }
}
