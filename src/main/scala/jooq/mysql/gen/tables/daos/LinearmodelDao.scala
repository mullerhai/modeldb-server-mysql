/**
 * This class is generated by jOOQ
 */
package jooq.mysql.gen.tables.daos


import java.lang.Double
import java.lang.Integer
import java.util.List

import javax.annotation.Generated

import jooq.mysql.gen.tables.Linearmodel
import jooq.mysql.gen.tables.records.LinearmodelRecord

import org.jooq.Configuration
import org.jooq.impl.DAOImpl

import scala.Array


/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.8.4"
  ),
  comments = "This class is generated by jOOQ"
)
class LinearmodelDao(configuration : Configuration) extends DAOImpl[LinearmodelRecord, jooq.mysql.gen.tables.pojos.Linearmodel, Integer](Linearmodel.LINEARMODEL, classOf[jooq.mysql.gen.tables.pojos.Linearmodel], configuration) {

  /**
   * Create a new LinearmodelDao without any configuration
   */
  def this() = {
    this(null)
  }

  override protected def getId(o : jooq.mysql.gen.tables.pojos.Linearmodel) : Integer = {
    o.getId
  }

  /**
   * Fetch records that have <code>id IN (values)</code>
   */
  def fetchById(values : Integer*) : List[jooq.mysql.gen.tables.pojos.Linearmodel] = {
    fetch(Linearmodel.LINEARMODEL.ID, values:_*)
  }

  /**
   * Fetch a unique record that has <code>id = value</code>
   */
  def fetchOneById(value : Integer) : jooq.mysql.gen.tables.pojos.Linearmodel = {
    fetchOne(Linearmodel.LINEARMODEL.ID, value)
  }

  /**
   * Fetch records that have <code>model IN (values)</code>
   */
  def fetchByModel(values : Integer*) : List[jooq.mysql.gen.tables.pojos.Linearmodel] = {
    fetch(Linearmodel.LINEARMODEL.MODEL, values:_*)
  }

  /**
   * Fetch records that have <code>rmse IN (values)</code>
   */
  def fetchByRmse(values : Double*) : List[jooq.mysql.gen.tables.pojos.Linearmodel] = {
    fetch(Linearmodel.LINEARMODEL.RMSE, values:_*)
  }

  /**
   * Fetch records that have <code>explainedVariance IN (values)</code>
   */
  def fetchByExplainedvariance(values : Double*) : List[jooq.mysql.gen.tables.pojos.Linearmodel] = {
    fetch(Linearmodel.LINEARMODEL.EXPLAINEDVARIANCE, values:_*)
  }

  /**
   * Fetch records that have <code>r2 IN (values)</code>
   */
  def fetchByR2(values : Double*) : List[jooq.mysql.gen.tables.pojos.Linearmodel] = {
    fetch(Linearmodel.LINEARMODEL.R2, values:_*)
  }
}
