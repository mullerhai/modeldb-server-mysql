/**
 * This class is generated by jOOQ
 */
package jooq.mysql.gen


import javax.annotation.Generated

import jooq.mysql.gen.tables.Annotation
import jooq.mysql.gen.tables.Annotationfragment
import jooq.mysql.gen.tables.Crossvalidationevent
import jooq.mysql.gen.tables.Crossvalidationfold
import jooq.mysql.gen.tables.Dataframe
import jooq.mysql.gen.tables.Dataframecolumn
import jooq.mysql.gen.tables.Dataframemetadata
import jooq.mysql.gen.tables.Dataframesplit
import jooq.mysql.gen.tables.Event
import jooq.mysql.gen.tables.Experiment
import jooq.mysql.gen.tables.ExperimentRunView
import jooq.mysql.gen.tables.Experimentrun
import jooq.mysql.gen.tables.Feature
import jooq.mysql.gen.tables.Fitevent
import jooq.mysql.gen.tables.Gridcellcrossvalidation
import jooq.mysql.gen.tables.Gridsearchcrossvalidationevent
import jooq.mysql.gen.tables.Hyperparameter
import jooq.mysql.gen.tables.Linearmodel
import jooq.mysql.gen.tables.Linearmodelterm
import jooq.mysql.gen.tables.Metadatakv
import jooq.mysql.gen.tables.Metricevent
import jooq.mysql.gen.tables.ModelView
import jooq.mysql.gen.tables.Modelobjectivehistory
import jooq.mysql.gen.tables.PipelineView
import jooq.mysql.gen.tables.Pipelinestage
import jooq.mysql.gen.tables.Project
import jooq.mysql.gen.tables.Randomsplitevent
import jooq.mysql.gen.tables.Transformer
import jooq.mysql.gen.tables.TransformerView
import jooq.mysql.gen.tables.Transformerspec
import jooq.mysql.gen.tables.Transformevent
import jooq.mysql.gen.tables.Treelink
import jooq.mysql.gen.tables.Treemodel
import jooq.mysql.gen.tables.Treemodelcomponent
import jooq.mysql.gen.tables.Treenode

import scala.Array


/**
 * Convenience access to all tables in modeldb
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.8.4"
  ),
  comments = "This class is generated by jOOQ"
)
object Tables {

  /**
   * The table <code>modeldb.Annotation</code>.
   */
  val ANNOTATION = jooq.mysql.gen.tables.Annotation.ANNOTATION

  /**
   * The table <code>modeldb.AnnotationFragment</code>.
   */
  val ANNOTATIONFRAGMENT = jooq.mysql.gen.tables.Annotationfragment.ANNOTATIONFRAGMENT

  /**
   * The table <code>modeldb.CrossValidationEvent</code>.
   */
  val CROSSVALIDATIONEVENT = jooq.mysql.gen.tables.Crossvalidationevent.CROSSVALIDATIONEVENT

  /**
   * The table <code>modeldb.CrossValidationFold</code>.
   */
  val CROSSVALIDATIONFOLD = jooq.mysql.gen.tables.Crossvalidationfold.CROSSVALIDATIONFOLD

  /**
   * The table <code>modeldb.DataFrame</code>.
   */
  val DATAFRAME = jooq.mysql.gen.tables.Dataframe.DATAFRAME

  /**
   * The table <code>modeldb.DataFrameColumn</code>.
   */
  val DATAFRAMECOLUMN = jooq.mysql.gen.tables.Dataframecolumn.DATAFRAMECOLUMN

  /**
   * The table <code>modeldb.DataFrameMetadata</code>.
   */
  val DATAFRAMEMETADATA = jooq.mysql.gen.tables.Dataframemetadata.DATAFRAMEMETADATA

  /**
   * The table <code>modeldb.DataFrameSplit</code>.
   */
  val DATAFRAMESPLIT = jooq.mysql.gen.tables.Dataframesplit.DATAFRAMESPLIT

  /**
   * The table <code>modeldb.Event</code>.
   */
  val EVENT = jooq.mysql.gen.tables.Event.EVENT

  /**
   * The table <code>modeldb.Experiment</code>.
   */
  val EXPERIMENT = jooq.mysql.gen.tables.Experiment.EXPERIMENT

  /**
   * The table <code>modeldb.ExperimentRun</code>.
   */
  val EXPERIMENTRUN = jooq.mysql.gen.tables.Experimentrun.EXPERIMENTRUN

  /**
   * VIEW
   */
  val EXPERIMENT_RUN_VIEW = jooq.mysql.gen.tables.ExperimentRunView.EXPERIMENT_RUN_VIEW

  /**
   * The table <code>modeldb.Feature</code>.
   */
  val FEATURE = jooq.mysql.gen.tables.Feature.FEATURE

  /**
   * The table <code>modeldb.FitEvent</code>.
   */
  val FITEVENT = jooq.mysql.gen.tables.Fitevent.FITEVENT

  /**
   * The table <code>modeldb.GridCellCrossValidation</code>.
   */
  val GRIDCELLCROSSVALIDATION = jooq.mysql.gen.tables.Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION

  /**
   * The table <code>modeldb.GridSearchCrossValidationEvent</code>.
   */
  val GRIDSEARCHCROSSVALIDATIONEVENT = jooq.mysql.gen.tables.Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT

  /**
   * The table <code>modeldb.HyperParameter</code>.
   */
  val HYPERPARAMETER = jooq.mysql.gen.tables.Hyperparameter.HYPERPARAMETER

  /**
   * The table <code>modeldb.LinearModel</code>.
   */
  val LINEARMODEL = jooq.mysql.gen.tables.Linearmodel.LINEARMODEL

  /**
   * The table <code>modeldb.LinearModelTerm</code>.
   */
  val LINEARMODELTERM = jooq.mysql.gen.tables.Linearmodelterm.LINEARMODELTERM

  /**
   * The table <code>modeldb.MetadataKV</code>.
   */
  val METADATAKV = jooq.mysql.gen.tables.Metadatakv.METADATAKV

  /**
   * The table <code>modeldb.MetricEvent</code>.
   */
  val METRICEVENT = jooq.mysql.gen.tables.Metricevent.METRICEVENT

  /**
   * The table <code>modeldb.ModelObjectiveHistory</code>.
   */
  val MODELOBJECTIVEHISTORY = jooq.mysql.gen.tables.Modelobjectivehistory.MODELOBJECTIVEHISTORY

  /**
   * VIEW
   */
  val MODEL_VIEW = jooq.mysql.gen.tables.ModelView.MODEL_VIEW

  /**
   * The table <code>modeldb.PipelineStage</code>.
   */
  val PIPELINESTAGE = jooq.mysql.gen.tables.Pipelinestage.PIPELINESTAGE

  /**
   * VIEW
   */
  val PIPELINE_VIEW = jooq.mysql.gen.tables.PipelineView.PIPELINE_VIEW

  /**
   * The table <code>modeldb.Project</code>.
   */
  val PROJECT = jooq.mysql.gen.tables.Project.PROJECT

  /**
   * The table <code>modeldb.RandomSplitEvent</code>.
   */
  val RANDOMSPLITEVENT = jooq.mysql.gen.tables.Randomsplitevent.RANDOMSPLITEVENT

  /**
   * The table <code>modeldb.Transformer</code>.
   */
  val TRANSFORMER = jooq.mysql.gen.tables.Transformer.TRANSFORMER

  /**
   * The table <code>modeldb.TransformerSpec</code>.
   */
  val TRANSFORMERSPEC = jooq.mysql.gen.tables.Transformerspec.TRANSFORMERSPEC

  /**
   * VIEW
   */
  val TRANSFORMER_VIEW = jooq.mysql.gen.tables.TransformerView.TRANSFORMER_VIEW

  /**
   * The table <code>modeldb.TransformEvent</code>.
   */
  val TRANSFORMEVENT = jooq.mysql.gen.tables.Transformevent.TRANSFORMEVENT

  /**
   * The table <code>modeldb.TreeLink</code>.
   */
  val TREELINK = jooq.mysql.gen.tables.Treelink.TREELINK

  /**
   * The table <code>modeldb.TreeModel</code>.
   */
  val TREEMODEL = jooq.mysql.gen.tables.Treemodel.TREEMODEL

  /**
   * The table <code>modeldb.TreeModelComponent</code>.
   */
  val TREEMODELCOMPONENT = jooq.mysql.gen.tables.Treemodelcomponent.TREEMODELCOMPONENT

  /**
   * The table <code>modeldb.TreeNode</code>.
   */
  val TREENODE = jooq.mysql.gen.tables.Treenode.TREENODE
}
