/**
 * This class is generated by jOOQ
 */
package jooq.mysql.gen


import java.util.ArrayList
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import jooq.mysql.gen.tables.Annotation
import jooq.mysql.gen.tables.Annotationfragment
import jooq.mysql.gen.tables.Crossvalidationevent
import jooq.mysql.gen.tables.Crossvalidationfold
import jooq.mysql.gen.tables.Dataframe
import jooq.mysql.gen.tables.Dataframecolumn
import jooq.mysql.gen.tables.Dataframemetadata
import jooq.mysql.gen.tables.Dataframesplit
import jooq.mysql.gen.tables.Event
import jooq.mysql.gen.tables.Experiment
import jooq.mysql.gen.tables.ExperimentRunView
import jooq.mysql.gen.tables.Experimentrun
import jooq.mysql.gen.tables.Feature
import jooq.mysql.gen.tables.Fitevent
import jooq.mysql.gen.tables.Gridcellcrossvalidation
import jooq.mysql.gen.tables.Gridsearchcrossvalidationevent
import jooq.mysql.gen.tables.Hyperparameter
import jooq.mysql.gen.tables.Linearmodel
import jooq.mysql.gen.tables.Linearmodelterm
import jooq.mysql.gen.tables.Metadatakv
import jooq.mysql.gen.tables.Metricevent
import jooq.mysql.gen.tables.ModelView
import jooq.mysql.gen.tables.Modelobjectivehistory
import jooq.mysql.gen.tables.PipelineView
import jooq.mysql.gen.tables.Pipelinestage
import jooq.mysql.gen.tables.Project
import jooq.mysql.gen.tables.Randomsplitevent
import jooq.mysql.gen.tables.Transformer
import jooq.mysql.gen.tables.TransformerView
import jooq.mysql.gen.tables.Transformerspec
import jooq.mysql.gen.tables.Transformevent
import jooq.mysql.gen.tables.Treelink
import jooq.mysql.gen.tables.Treemodel
import jooq.mysql.gen.tables.Treemodelcomponent
import jooq.mysql.gen.tables.Treenode

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl

import scala.Array


object Modeldb {

  /**
   * The reference instance of <code>modeldb</code>
   */
  val MODELDB = new Modeldb
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.8.4"
  ),
  comments = "This class is generated by jOOQ"
)
class Modeldb extends SchemaImpl("modeldb", DefaultCatalog.DEFAULT_CATALOG) {

  override def getCatalog : Catalog = DefaultCatalog.DEFAULT_CATALOG

  override def getTables : List[Table[_]] = {
    val result = new ArrayList[Table[_]]
    result.addAll(getTables0)
    result
  }

  private def getTables0() : List[Table[_]] = {
    return Arrays.asList[Table[_]](
      Annotation.ANNOTATION,
      Annotationfragment.ANNOTATIONFRAGMENT,
      Crossvalidationevent.CROSSVALIDATIONEVENT,
      Crossvalidationfold.CROSSVALIDATIONFOLD,
      Dataframe.DATAFRAME,
      Dataframecolumn.DATAFRAMECOLUMN,
      Dataframemetadata.DATAFRAMEMETADATA,
      Dataframesplit.DATAFRAMESPLIT,
      Event.EVENT,
      Experiment.EXPERIMENT,
      Experimentrun.EXPERIMENTRUN,
      ExperimentRunView.EXPERIMENT_RUN_VIEW,
      Feature.FEATURE,
      Fitevent.FITEVENT,
      Gridcellcrossvalidation.GRIDCELLCROSSVALIDATION,
      Gridsearchcrossvalidationevent.GRIDSEARCHCROSSVALIDATIONEVENT,
      Hyperparameter.HYPERPARAMETER,
      Linearmodel.LINEARMODEL,
      Linearmodelterm.LINEARMODELTERM,
      Metadatakv.METADATAKV,
      Metricevent.METRICEVENT,
      Modelobjectivehistory.MODELOBJECTIVEHISTORY,
      ModelView.MODEL_VIEW,
      Pipelinestage.PIPELINESTAGE,
      PipelineView.PIPELINE_VIEW,
      Project.PROJECT,
      Randomsplitevent.RANDOMSPLITEVENT,
      Transformer.TRANSFORMER,
      Transformerspec.TRANSFORMERSPEC,
      TransformerView.TRANSFORMER_VIEW,
      Transformevent.TRANSFORMEVENT,
      Treelink.TREELINK,
      Treemodel.TREEMODEL,
      Treemodelcomponent.TREEMODELCOMPONENT,
      Treenode.TREENODE)
  }
}
